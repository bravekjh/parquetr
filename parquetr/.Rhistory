validateFile <- function(filehandle, size) {     header = readBin(fileHandle, character(), size = 4, endian = "little")     seek(fileHandle, size - 1)     footer = readBin(fileHandle, character(), size = 4, endian = "little")     header == "PAR1" && footer == "PAR1" } # Used to open a parquet file read.parquet <- function(filename) {     size <- file.info(fileName)$size     parquetFile <- file(filename, 'rb')     validateFile(parquetFile, size) }
setwd("C:\Users\richa\Desktop")
setwd("C:\\Users\\richa\\Desktop")
read.parquet("all.types.parquet")
# start with the base function for reading parquet validateFile <- function(filehandle, size) {     header = readBin(fileHandle, character(), size = 4, endian = "little")     seek(fileHandle, size - 1)     footer = readBin(fileHandle, character(), size = 4, endian = "little")     header == "PAR1" && footer == "PAR1" } # Used to open a parquet file read.parquet <- function(filename) {     size <- file.info(filename)$size     parquetFile <- file(filename, 'rb')     validateFile(parquetFile, size) }
read.parquet("all.types.parquet")
read.parquet("alltypes.plain.parquet")
# start with the base function for reading parquet validateFile <- function(filehandle, size) {     header = readBin(filehandle, character(), size = 4, endian = "little")     seek(filehandle, size - 1)     footer = readBin(filehandle, character(), size = 4, endian = "little")     header == "PAR1" && footer == "PAR1" } # Used to open a parquet file read.parquet <- function(filename) {     size <- file.info(filename)$size     parquetFile <- file(filename, 'rb')     validateFile(parquetFile, size) }
# start with the base function for reading parquet validateFile <- function(filehandle, size) {     header = readBin(filehandle, character(), size = 4, endian = "little")     seek(filehandle, size - 1)     footer = readBin(filehandle, character(), size = 4, endian = "little")     header == "PAR1" && footer == "PAR1" } # Used to open a parquet file read.parquet <- function(filename) {     size <- file.info(filename)$size     parquetFile <- file(filename, 'rb')     validateFile(parquetFile, size)     close(parquetFile) }
read.parquet("alltypes.plain.parquet")
# start with the base function for reading parquet validateFile <- function(filehandle, size) {     header = readBin(filehandle, character(), size = 4, endian = "little")     seek(filehandle, size - 1)     footer = readBin(filehandle, character(), size = 4, endian = "little")     header == "PAR1" && footer == "PAR1" } # Used to open a parquet file read.parquet <- function(filename) {  # start with the base function for reading parquet validateFile <- function(filehandle, size) {     header = readBin(filehandle, character(), size = 4, endian = "little")     print(header)     seek(filehandle, size - 1)     footer = readBin(filehandle, character(), size = 4, endian = "little")     header == "PAR1" && footer == "PAR1" } # Used to open a parquet file read.parquet <- function(filename) {     size <- file.info(filename)$size     parquetFile <- file(filename, 'rb')     validateFile(parquetFile, size)     close(parquetFile) }   size <- file.info(filename)$size     parquetFile <- file(filename, 'rb')     validateFile(parquetFile, size) }
# start with the base function for reading parquet validateFile <- function(filehandle, size) {     header = readBin(filehandle, character(), size = 4, endian = "little")     print(header)     seek(filehandle, size - 1)     footer = readBin(filehandle, character(), size = 4, endian = "little")     header == "PAR1" && footer == "PAR1" } # Used to open a parquet file read.parquet <- function(filename) {     size <- file.info(filename)$size     parquetFile <- file(filename, 'rb')     validateFile(parquetFile, size)     close(parquetFile) }
read.parquet("alltypes.plain.parquet")
# start with the base function for reading parquet validateFile <- function(filehandle, size) {     header = readBin(filehandle, character(), size = 1, endian = "little")     print(header)     seek(filehandle, size - 1)     footer = readBin(filehandle, character(), size = 4, endian = "little")     header == "PAR1" && footer == "PAR1" }
read.parquet("alltypes.plain.parquet")
validateFile <- function(filehandle, size) {     header = readBin(filehandle, character(), size = 4, endian = "little")     print(header)     seek(filehandle, size - 4)     footer = readBin(filehandle, character(), size = 4, endian = "little")     header == "PAR1" && footer == "PAR1" }
read.parquet("alltypes.plain.parquet")
validateFile <- function(filehandle, size) {     header = readBin(filehandle, character(), size = 4, endian = "little")     print(header)     seek(filehandle, size - 5)     footer = readBin(filehandle, character(), size = 4, endian = "little")     header == "PAR1" && footer == "PAR1" }
read.parquet("alltypes.plain.parquet")
validateFile <- function(filehandle, size) {     header = readBin(filehandle, character(), size = 4, endian = "little")     print(header)     seek(filehandle, size - 5)     footer = readBin(filehandle, character(), size = 4, endian = "little")     print(footer)     header == "PAR1" & footer == "PAR1" }
read.parquet("alltypes.plain.parquet")
# start with the base function for reading parquet validateFile <- function(filehandle, size) {     header = readBin(filehandle, character(), size = 4, n = 1, endian = "little")     print(header)     seek(filehandle, size - 5)     footer = readBin(filehandle, character(), size = 4, n = 1, endian = "little")     print(footer)     header == "PAR1" & footer == "PAR1" } # Used to open a parquet file read.parquet <- function(filename) {     size <- file.info(filename)$size     parquetFile <- file(filename, 'rb')     validateFile(parquetFile, size)     close(parquetFile) }
read.parquet("alltypes.plain.parquet")
# start with the base function for reading parquet validateFile <- function(filehandle, size) {     header = readBin(filehandle, character(), size = 4, n = 1, endian = "little")     print(header)     seek(filehandle, size - 5)     footer = readBin(filehandle, character(), size = 4, n = 1, endian = "little")     print(footer)     header == "PAR1" & footer == "PAR1" } # Used to open a parquet file read.parquet <- function(filename) {     size <- file.info(filename)$size     parquetFile <- file(filename, 'rb')     validateFile(parquetFile, size)     close(parquetFile) }
read.parquet("alltypes.plain.parquet")
